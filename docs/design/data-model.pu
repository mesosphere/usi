@startuml

object FrameworkState #LightGrey {

}

object FrameworkOrchestrator #LightGrey {
}

package Scheduler {

  object PodSpec #Cyan {
    id
    goal
    runSpec
  }

  object RunSpec #Cyan {
    reservationId?
    resourceRequirements
    commandInfo
    placementConstraints
    etc...
  }

  object ReservationSpec #Cyan {
    id
    agentId
    role
    resources
    goal (Unreserved | Reserved)
  }

  /' we'll have to store this, too, since Mesos expunges it. '/
  object AgentInfo #LightGreen {
    id
    ip
    hostname
    faultDomain
    attributes
    maintenance
  }

  object ReservationRecord #Pink {
    id
    agentId
    resources
  }

  /' we have to store these because we cannot reliably recover it from Mesos under some situations, or it isn't available in Mesos at all... '/
  object PodRecord #Pink {
    id
    launchedAt
    agentId
    unserviceable?
    -- reason (unhealthy | unreachable)
    -- since
  }



  object PodStatus {
    id
    status
    statusTimestamp
    agent: AgentInfo
    record: PodRecord
    goal
  }

  object ReservationStatus {
    id
    lastSeenAt
    agentInfo
    status
  }

  PodSpec "1" --> "0..1" ReservationSpec
  PodSpec "0..1" -- "0..1" PodStatus
  PodSpec "1" <-- "1" PodRecord
  PodSpec "1" --> "0..1" RunSpec
  ReservationRecord "0..1" --> "1" ReservationSpec
  ReservationRecord "1" --> "1" AgentInfo
  PodRecord "1" --> "1" AgentInfo
  PodStatus "0..1" --> "0..1" PodRecord
  PodStatus "1" --> "1" AgentInfo
  ReservationStatus "1" --> "0..1" ReservationRecord
}

FrameworkState -> PodSpec : mapped
FrameworkState -> ReservationSpec : mapped

FrameworkOrchestrator -> PodStatus
FrameworkOrchestrator -> ReservationStatus

legend
|= Legend|
|<#Cyan> Input |
|<#Pink> Persisted |
|<#LightGreen> Cached (persisted) |
|<#Yellow> Output |
endlegend

@enduml
