import java.nio.file.Paths

plugins {
    id 'idea'
    id 'org.ajoberstar.git-publish' version '2.0.0'
    id 'cz.alenkacz.gradle.scalafmt' version '1.7.2'
    // Use `$ gradle htmlDependencyReport` to generate project library dependency report
    id 'project-report'
}

ext {
    scalaVersion = '2.12'
    mesosVersion = '1.7.0'
    akkaVersion = '2.5.19'
}

def readCurrentVersion = {
  def out = new ByteArrayOutputStream()

  exec{
      commandLine "./version"
      standardOutput = out;
  }
  out.toString().replaceAll("\\s", "");
}

allprojects {

    group = 'com.mesosphere.usi'
    version = readCurrentVersion()

    apply plugin: "scala"
    apply plugin: 'cz.alenkacz.gradle.scalafmt'
    apply plugin: 'maven-publish'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    compileScala.targetCompatibility = 1.8

    archivesBaseName = "usi-${it.name}"

    repositories {
        jcenter()
    }

    // compiler warnings + unused imports are reported as errors
    tasks.withType(ScalaCompile) {
        scalaCompileOptions.additionalParameters = ["-Xlint", "-Xfatal-warnings"]
    }

    compileScala.dependsOn scalafmtAll

    dependencies {
        // Use Scala 2.12 in our library project
        implementation 'org.scala-lang:scala-library:2.12.7'

        // Use Scalatest for testing our library
        testImplementation "org.scalatest:scalatest_$scalaVersion:3.0.5"

        // Need scala-xml at test runtime
        testRuntimeOnly "org.scala-lang.modules:scala-xml_$scalaVersion:1.1.1"

        // Logging
        testRuntime group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
        
        // Transitive dependencies
        compile "com.typesafe.scala-logging:scala-logging_$scalaVersion:3.9.2"

        // Akka and akka-http
        compile group: 'com.typesafe.akka', name: "akka-http_$scalaVersion", version: '10.0.11'
        compile group: 'com.typesafe.akka', name: "akka-stream_$scalaVersion", version: akkaVersion
        compile group: 'com.typesafe.akka', name: "akka-slf4j_$scalaVersion", version: akkaVersion

        // Apache Curator. See this [compatibility documentation](http://curator.apache.org/zk-compatibility.html)
        def withoutZk = { exclude group: 'org.apache.zookeeper', module: 'zookeeper' }
        compile group: 'org.apache.curator', name: 'curator-recipes', version: '4.0.1', withoutZk
        compile group: 'org.apache.curator', name: 'curator-client', version: '4.0.1'
        compile group: 'org.apache.curator', name: 'curator-framework', version: '4.0.1'
        compile group: 'org.apache.curator', name: 'curator-x-async', version: '4.0.1'
        compile group: 'org.apache.curator', name: 'curator-test', version: '2.13.0', withoutZk
    }

    test {
        reports.html.enabled = false
    }
    check {}

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId project.group
                version project.version

                from components.java
            }
        }
        repositories {
            maven {
                def snapshotsRepoUrl = 's3://downloads.mesosphere.io/maven-snapshot/'
                def releaseRepoUrl = 's3://downloads.mesosphere.io/maven/'
                url = version.endsWith('-SNAPSHOT') ? snapshotsRepoUrl : releaseRepoUrl
                authentication {
                    awsIm(AwsImAuthentication)
                }
            }
        }
    }

}

apply from: 'ci.gradle'

scaladoc {
    description = "Builds all Scala docs into the gh-pages checkout for publishing."
    destinationDir file(Paths.get(rootProject.buildDir.toString(), "gitPublish", "api"))

    source = files(subprojects.collect{it.sourceSets.main.allScala + it.sourceSets.main.allJava})
    classpath = files(subprojects.collect {it.sourceSets.main.compileClasspath})
    scalaClasspath = subprojects.first().scaladoc.scalaClasspath

    subprojects.each {
        excludes += it.scaladoc.excludes
        includes += it.scaladoc.includes
    }
}

idea {
  project {
    jdkName = '1.8'
    languageLevel = '1.8'
    vcs = 'Git'
  }
}
