
import java.nio.file.Paths

plugins {
    id 'idea'
    id 'org.ajoberstar.git-publish' version '2.0.0'
    id 'cz.alenkacz.gradle.scalafmt' version '1.7.2'
}

ext {
    // Scala version for all scala dependencies
    scalaVersion = '2.12'

    mesosVersion = '1.7.0'
}

allprojects {

    version = '0.1'

    apply plugin: "scala"
    apply plugin: 'cz.alenkacz.gradle.scalafmt'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    compileScala.targetCompatibility = 1.8

    archivesBaseName = "usi-${it.name}"

    repositories {
        jcenter()
    }

    // compiler warnings + unused imports are reported as errors
    tasks.withType(ScalaCompile) {
        scalaCompileOptions.additionalParameters = ["-Xlint", "-Xfatal-warnings"]
    }

    compileScala.dependsOn scalafmtAll

    dependencies {

        // Use Scala 2.12 in our library project
        implementation 'org.scala-lang:scala-library:2.12.7'
        implementation 'com.typesafe.scala-logging:scala-logging_2.12:3.9.2'

        // Use Scalatest for testing our library
        testImplementation 'junit:junit:4.12'
        testImplementation "org.scalatest:scalatest_$scalaVersion:3.0.5"

        // Need scala-xml at test runtime
        testRuntimeOnly "org.scala-lang.modules:scala-xml_$scalaVersion:1.1.1"

        // Logging
        compile group: 'com.typesafe.scala-logging', name: "scala-logging_$scalaVersion", version: '3.9.2'

        // Akka
        compile group: 'com.typesafe.akka', name: "akka-http_$scalaVersion", version: '10.0.11'
    }

    test {
        reports.html.enabled = false
    }
    check {}
}

apply from: 'ci.gradle'

scaladoc {
    description = "Builds all Scala docs into the gh-pages checkout for publishing."
    destinationDir file(Paths.get(rootProject.buildDir.toString(), "gitPublish", "api"))

    source = files(subprojects.collect{it.sourceSets.main.allScala + it.sourceSets.main.allJava})
    classpath = files(subprojects.collect {it.sourceSets.main.compileClasspath})
    scalaClasspath = subprojects.first().scaladoc.scalaClasspath

    subprojects.each {
        excludes += it.scaladoc.excludes
        includes += it.scaladoc.includes
    }
}

idea {
  project {
    jdkName = '1.8'
    languageLevel = '1.8'
    vcs = 'Git'
  }
}
